memberSearchIndex = [{"p":"abstraction","c":"Board","l":"Board(int)","u":"%3Cinit%3E(int)"},{"p":"abstraction","c":"Case","l":"BORDER"},{"p":"abstraction","c":"Quoridor","l":"confirmation(Scanner, int, Board, Player[], Integer)","u":"confirmation(java.util.Scanner,int,abstraction.Board,abstraction.Player[],java.lang.Integer)"},{"p":"abstraction","c":"Wall","l":"createWall(Board, Player[], Integer, Orientation, Position)","u":"createWall(abstraction.Board,abstraction.Player[],java.lang.Integer,abstraction.Orientation,abstraction.Position)"},{"p":"abstraction","c":"Board","l":"dfs(Position, Pawn, Set<Position>, Set<Position>)","u":"dfs(abstraction.Position,abstraction.Pawn,java.util.Set,java.util.Set)"},{"p":"abstraction","c":"Case","l":"EMPTY"},{"p":"abstraction","c":"Quoridor","l":"enterPosition(Scanner)","u":"enterPosition(java.util.Scanner)"},{"p":"abstraction","c":"Position","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"abstraction","c":"Pawn","l":"finishLine()"},{"p":"abstraction","c":"Board","l":"getBoard()"},{"p":"abstraction","c":"Pawn","l":"getFinishLine()"},{"p":"abstraction","c":"Pawn","l":"getLastPos()"},{"p":"abstraction","c":"Board","l":"getLastWall()"},{"p":"abstraction","c":"Player","l":"getName()"},{"p":"abstraction","c":"Wall","l":"getOrientation()"},{"p":"abstraction","c":"Player","l":"getPawn()"},{"p":"abstraction","c":"Pawn","l":"getPlayerNb()"},{"p":"abstraction","c":"Board","l":"getPlayerNumber()"},{"p":"abstraction","c":"Pawn","l":"getPos()"},{"p":"abstraction","c":"Wall","l":"getPosition()"},{"p":"abstraction","c":"Pawn","l":"getPossibleMove()"},{"p":"abstraction","c":"Player","l":"getRemainingWall()"},{"p":"abstraction","c":"Case","l":"getValue()"},{"p":"abstraction","c":"Position","l":"getX()"},{"p":"abstraction","c":"Position","l":"getY()"},{"p":"abstraction","c":"Position","l":"hashCode()"},{"p":"abstraction","c":"Wall","l":"hasWall(Board)","u":"hasWall(abstraction.Board)"},{"p":"abstraction","c":"Orientation","l":"HORIZONTAL"},{"p":"abstraction","c":"Board","l":"initializeBoard()"},{"p":"abstraction","c":"Board","l":"isWinnable(Pawn)","u":"isWinnable(abstraction.Pawn)"},{"p":"abstraction","c":"Board","l":"isWinnableForAll(Player[])","u":"isWinnableForAll(abstraction.Player[])"},{"p":"abstraction","c":"Pawn","l":"isWinner()"},{"p":"abstraction","c":"Quoridor","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"abstraction","c":"Board","l":"MAXWALLCOUNT"},{"p":"abstraction","c":"Pawn","l":"move(Board, Position)","u":"move(abstraction.Board,abstraction.Position)"},{"p":"abstraction","c":"Case","l":"NULL"},{"p":"abstraction","c":"Wall","l":"outOfBorderWidth()"},{"p":"abstraction","c":"Pawn","l":"Pawn(Board, Position, Case)","u":"%3Cinit%3E(abstraction.Board,abstraction.Position,abstraction.Case)"},{"p":"abstraction","c":"Quoridor","l":"placeWall(Board, Player[], Integer, Position, Orientation)","u":"placeWall(abstraction.Board,abstraction.Player[],java.lang.Integer,abstraction.Position,abstraction.Orientation)"},{"p":"abstraction","c":"Player","l":"Player(String, Pawn, int)","u":"%3Cinit%3E(java.lang.String,abstraction.Pawn,int)"},{"p":"abstraction","c":"Case","l":"PLAYER1"},{"p":"abstraction","c":"Case","l":"PLAYER2"},{"p":"abstraction","c":"Case","l":"PLAYER3"},{"p":"abstraction","c":"Case","l":"PLAYER4"},{"p":"abstraction","c":"Position","l":"Position(Integer, Integer)","u":"%3Cinit%3E(java.lang.Integer,java.lang.Integer)"},{"p":"abstraction","c":"Pawn","l":"possibleMove(Board, Position)","u":"possibleMove(abstraction.Board,abstraction.Position)"},{"p":"abstraction","c":"Case","l":"POTENTIALWALL"},{"p":"abstraction","c":"Quoridor","l":"Quoridor()","u":"%3Cinit%3E()"},{"p":"abstraction","c":"Wall","l":"removeLastWall(Board)","u":"removeLastWall(abstraction.Board)"},{"p":"abstraction","c":"Pawn","l":"resetMove(Board)","u":"resetMove(abstraction.Board)"},{"p":"abstraction","c":"Quoridor","l":"roundOfPlay(Board, Player[], Integer)","u":"roundOfPlay(abstraction.Board,abstraction.Player[],java.lang.Integer)"},{"p":"abstraction","c":"Board","l":"setBoard(Case[][])","u":"setBoard(abstraction.Case[][])"},{"p":"abstraction","c":"Pawn","l":"setFinishLine(Set<Position>)","u":"setFinishLine(java.util.Set)"},{"p":"abstraction","c":"Pawn","l":"setLastPos(Position)","u":"setLastPos(abstraction.Position)"},{"p":"abstraction","c":"Board","l":"setLastWall(Wall)","u":"setLastWall(abstraction.Wall)"},{"p":"abstraction","c":"Player","l":"setName(String)","u":"setName(java.lang.String)"},{"p":"abstraction","c":"Wall","l":"setOrientation(Orientation)","u":"setOrientation(abstraction.Orientation)"},{"p":"abstraction","c":"Board","l":"setPlayerNumber(int)"},{"p":"abstraction","c":"Pawn","l":"setPos(Position)","u":"setPos(abstraction.Position)"},{"p":"abstraction","c":"Wall","l":"setPosition(Position)","u":"setPosition(abstraction.Position)"},{"p":"abstraction","c":"Pawn","l":"setPossibleMove(Set<Position>)","u":"setPossibleMove(java.util.Set)"},{"p":"abstraction","c":"Player","l":"setRemainingWall(int)"},{"p":"abstraction","c":"Position","l":"setX(Integer)","u":"setX(java.lang.Integer)"},{"p":"abstraction","c":"Position","l":"setY(Integer)","u":"setY(java.lang.Integer)"},{"p":"abstraction","c":"Board","l":"SIZE"},{"p":"abstraction","c":"Board","l":"STARTINGPOSITIONPLAYERS"},{"p":"abstraction","c":"Board","l":"toString()"},{"p":"abstraction","c":"Position","l":"toString()"},{"p":"abstraction","c":"Pawn","l":"updatePos(Board, Position)","u":"updatePos(abstraction.Board,abstraction.Position)"},{"p":"abstraction","c":"Wall","l":"updateWall(Board, Case)","u":"updateWall(abstraction.Board,abstraction.Case)"},{"p":"abstraction","c":"Case","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"abstraction","c":"Orientation","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"abstraction","c":"Case","l":"values()"},{"p":"abstraction","c":"Orientation","l":"values()"},{"p":"abstraction","c":"Wall","l":"verifyWall(Board)","u":"verifyWall(abstraction.Board)"},{"p":"abstraction","c":"Orientation","l":"VERTICAL"},{"p":"abstraction","c":"Case","l":"WALL"},{"p":"abstraction","c":"Wall","l":"Wall(Orientation, Position)","u":"%3Cinit%3E(abstraction.Orientation,abstraction.Position)"},{"p":"abstraction","c":"Wall","l":"wallError(Board, Player[], Integer)","u":"wallError(abstraction.Board,abstraction.Player[],java.lang.Integer)"}];updateSearchResults();