memberSearchIndex = [{"p":"Abstraction","c":"Board","l":"accountWall()"},{"p":"Abstraction","c":"Board","l":"Board(int)","u":"%3Cinit%3E(int)"},{"p":"Abstraction","c":"Case","l":"BORDER"},{"p":"Abstraction","c":"Movement","l":"BOT"},{"p":"Abstraction","c":"Pawn","l":"botMove(Board, Set<Position>, Position, Boolean)","u":"botMove(Abstraction.Board,java.util.Set,Abstraction.Position,java.lang.Boolean)"},{"p":"Abstraction","c":"Wall","l":"createWall(Board)","u":"createWall(Abstraction.Board)"},{"p":"Abstraction","c":"Board","l":"dfs(Position, Pawn, Set<Position>, Set<Position>)","u":"dfs(Abstraction.Position,Abstraction.Pawn,java.util.Set,java.util.Set)"},{"p":"Abstraction","c":"Case","l":"EMPTY"},{"p":"Abstraction","c":"Position","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"Abstraction","c":"Pawn","l":"finishLine()"},{"p":"Abstraction","c":"Board","l":"getBoard()"},{"p":"Abstraction","c":"Pawn","l":"getFinishLine()"},{"p":"Abstraction","c":"Player","l":"getName()"},{"p":"Abstraction","c":"Wall","l":"getOrientation()"},{"p":"Abstraction","c":"Player","l":"getPawn()"},{"p":"Abstraction","c":"Pawn","l":"getPlayerNb()"},{"p":"Abstraction","c":"Board","l":"getPlayerNumber()"},{"p":"Abstraction","c":"Pawn","l":"getPos()"},{"p":"Abstraction","c":"Wall","l":"getPosition()"},{"p":"Abstraction","c":"Pawn","l":"getPossibleDestination()"},{"p":"Abstraction","c":"Case","l":"getValue()"},{"p":"Abstraction","c":"Board","l":"getWallCount()"},{"p":"Abstraction","c":"Position","l":"getX()"},{"p":"Abstraction","c":"Position","l":"getY()"},{"p":"Abstraction","c":"Position","l":"hashCode()"},{"p":"Abstraction","c":"Wall","l":"hasWall(Board)","u":"hasWall(Abstraction.Board)"},{"p":"Abstraction","c":"Orientation","l":"HORIZONTAL"},{"p":"Abstraction","c":"Board","l":"initializeBoard()"},{"p":"Abstraction","c":"Board","l":"isWinnable(Pawn)","u":"isWinnable(Abstraction.Pawn)"},{"p":"Abstraction","c":"Board","l":"isWinnableForAll(Player[])","u":"isWinnableForAll(Abstraction.Player[])"},{"p":"Abstraction","c":"Pawn","l":"isWinner()"},{"p":"Abstraction","c":"Movement","l":"LEFT"},{"p":"Abstraction","c":"Pawn","l":"leftMove(Board, Set<Position>, Position, Boolean)","u":"leftMove(Abstraction.Board,java.util.Set,Abstraction.Position,java.lang.Boolean)"},{"p":"Abstraction","c":"Quoridor","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"Abstraction","c":"Board","l":"MAXWALLCOUNT"},{"p":"Abstraction","c":"Board","l":"move(Position, Pawn)","u":"move(Abstraction.Position,Abstraction.Pawn)"},{"p":"Abstraction","c":"Case","l":"NULL"},{"p":"Abstraction","c":"Wall","l":"outOfBorderWidth()"},{"p":"Abstraction","c":"Pawn","l":"Pawn(Board, Position, Case)","u":"%3Cinit%3E(Abstraction.Board,Abstraction.Position,Abstraction.Case)"},{"p":"Abstraction","c":"Player","l":"Player(String, Pawn)","u":"%3Cinit%3E(java.lang.String,Abstraction.Pawn)"},{"p":"Abstraction","c":"Case","l":"PLAYER1"},{"p":"Abstraction","c":"Case","l":"PLAYER2"},{"p":"Abstraction","c":"Case","l":"PLAYER3"},{"p":"Abstraction","c":"Case","l":"PLAYER4"},{"p":"Abstraction","c":"Position","l":"Position(Integer, Integer)","u":"%3Cinit%3E(java.lang.Integer,java.lang.Integer)"},{"p":"Abstraction","c":"Pawn","l":"possibleMove(Board, Position)","u":"possibleMove(Abstraction.Board,Abstraction.Position)"},{"p":"Abstraction","c":"Case","l":"POTENTIALWALL"},{"p":"Abstraction","c":"Quoridor","l":"Quoridor()","u":"%3Cinit%3E()"},{"p":"Abstraction","c":"Movement","l":"RIGHT"},{"p":"Abstraction","c":"Pawn","l":"rightMove(Board, Set<Position>, Position, Boolean)","u":"rightMove(Abstraction.Board,java.util.Set,Abstraction.Position,java.lang.Boolean)"},{"p":"Abstraction","c":"Board","l":"roundOfPlay(Player[], Integer)","u":"roundOfPlay(Abstraction.Player[],java.lang.Integer)"},{"p":"Abstraction","c":"Board","l":"setBoard(Case[][])","u":"setBoard(Abstraction.Case[][])"},{"p":"Abstraction","c":"Pawn","l":"setFinishLine(Set<Position>)","u":"setFinishLine(java.util.Set)"},{"p":"Abstraction","c":"Player","l":"setName(String)","u":"setName(java.lang.String)"},{"p":"Abstraction","c":"Wall","l":"setOrientation(Orientation)","u":"setOrientation(Abstraction.Orientation)"},{"p":"Abstraction","c":"Board","l":"setPlayerNumber(int)"},{"p":"Abstraction","c":"Pawn","l":"setPos(Position)","u":"setPos(Abstraction.Position)"},{"p":"Abstraction","c":"Wall","l":"setPosition(Position)","u":"setPosition(Abstraction.Position)"},{"p":"Abstraction","c":"Pawn","l":"setPossibleDestination(Set<Position>)","u":"setPossibleDestination(java.util.Set)"},{"p":"Abstraction","c":"Board","l":"setWallCount(int)"},{"p":"Abstraction","c":"Position","l":"setX(Integer)","u":"setX(java.lang.Integer)"},{"p":"Abstraction","c":"Position","l":"setY(Integer)","u":"setY(java.lang.Integer)"},{"p":"Abstraction","c":"Board","l":"show()"},{"p":"Abstraction","c":"Board","l":"SIZE"},{"p":"Abstraction","c":"Pawn","l":"specialMove(Board, Set<Position>, Position, Movement)","u":"specialMove(Abstraction.Board,java.util.Set,Abstraction.Position,Abstraction.Movement)"},{"p":"Abstraction","c":"Movement","l":"TOP"},{"p":"Abstraction","c":"Pawn","l":"topMove(Board, Set<Position>, Position, Boolean)","u":"topMove(Abstraction.Board,java.util.Set,Abstraction.Position,java.lang.Boolean)"},{"p":"Abstraction","c":"Position","l":"toString()"},{"p":"Abstraction","c":"Wall","l":"updateWall(Board, Case, int)","u":"updateWall(Abstraction.Board,Abstraction.Case,int)"},{"p":"Abstraction","c":"Case","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"Abstraction","c":"Movement","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"Abstraction","c":"Orientation","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"Abstraction","c":"Case","l":"values()"},{"p":"Abstraction","c":"Movement","l":"values()"},{"p":"Abstraction","c":"Orientation","l":"values()"},{"p":"Abstraction","c":"Wall","l":"verifyWall(Board)","u":"verifyWall(Abstraction.Board)"},{"p":"Abstraction","c":"Orientation","l":"VERTICAL"},{"p":"Abstraction","c":"Case","l":"WALL"},{"p":"Abstraction","c":"Wall","l":"Wall(Orientation, Position)","u":"%3Cinit%3E(Abstraction.Orientation,Abstraction.Position)"},{"p":"Abstraction","c":"Wall","l":"wallError(Board, Player[], Integer)","u":"wallError(Abstraction.Board,Abstraction.Player[],java.lang.Integer)"}];updateSearchResults();